1. 차트 라이브러리 npm으로 설치
2. 설치된 라이브러리 import로 App.vue 에서 로딩
3. mounted() 라이프 사이클 훅에서 차트를 그림. (ref 속성 )
4. 차트를 컴포넌트화
5. 컴포넌트의 플러그인화
6. 컴포넌트 통신을 이용한 차트 컴포넌트 기능 결합

#Vue에서 DOM을 접근하는 방법인 ref 속성 소개
- vue Component에서 document를 통해서 접근할 경우 컴포넌트 상관없이 접근할 수 있으므로
충돌날 확률이 높음. 
- 따라서 vue를 통해서 dom에 접근하는 ref 속성을 사용하는 것이 좋다.

# Vue.js 플러그인 소개 및 차트 플러그인 제작
플러그인 : 모든 컴포넌트에서 사용할 수 있는 기능을 정의하는 것.
플러그인에 차트 플러그인에서 사용하는 공통 사용 코드를 넣음.
컴포넌트마다 불러왔던 chart.js를 플러그인에서 한번만 로딩.
나머지는 공용으로 쓰게 함.

# Vue.prototype
특정 메서드나 객체의 속성을 확장하는 것